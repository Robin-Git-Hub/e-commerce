{"ast":null,"code":"import axios from \"axios\";\nimport { loadStripe } from '@stripe/stripe-js'; // GET\n\nexport const getProducts = () => {\n  return new Promise((onSuccess, onFail) => {\n    axios.get(\"/api/products\").then((response, error) => {\n      if (!response || error) {\n        return onFail(`Response failure : ${error}`);\n      }\n\n      onSuccess(response);\n    }).catch(err => onFail(err));\n  });\n};\nexport const getUser = body => {\n  return new Promise((onSuccess, onFail) => {\n    console.log(body.profile);\n    axios.get(`/api/user/${body.profile.email}`, {\n      params: {\n        email: body.profile.email\n      }\n    }).then((response, error) => {\n      if (!response || error) {\n        return onFail(`Response failure : ${error}`);\n      }\n\n      onSuccess(response.data);\n    }).catch(err => onFail(err));\n  });\n}; // POST\n\nexport const addUser = body => {\n  return new Promise((onSuccess, onFail) => {\n    axios.post(\"/api/users/add\", body).then((response, error) => {\n      if (!response || error) {\n        return onFail(`Response failure : ${error}`);\n      }\n\n      onSuccess(`user profile successfully created`);\n    }).catch(err => onFail(err));\n  });\n}; // Stripe\n\nexport const processPayment = async order => {\n  var stripePromise = loadStripe(\"pk_test_51Ig7X1HoFREscj39cocpLby78kAIGaZCMSg87LseWP7JyeqvOQ19CG4oC7pYQbNm0uvRFQU811Rel104QQQZtJzn00wppsy5Kg\");\n  const stripe = await stripePromise;\n  axios.post('api/create-checkout-session', order).then(response => {\n    const sessionID = response.data.id;\n    return stripe.redirectToCheckout({\n      sessionId: sessionID\n    });\n  });\n};","map":{"version":3,"sources":["/home/crochet/Bureau/Site E-commerce/client/src/lib/service/index.js"],"names":["axios","loadStripe","getProducts","Promise","onSuccess","onFail","get","then","response","error","catch","err","getUser","body","console","log","profile","email","params","data","addUser","post","processPayment","order","stripePromise","stripe","sessionID","id","redirectToCheckout","sessionId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,mBAAzB,C,CAEA;;AACA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,SAAO,IAAIC,OAAJ,CAAY,CAACC,SAAD,EAAYC,MAAZ,KAAuB;AACxCL,IAAAA,KAAK,CACFM,GADH,CACO,eADP,EAEGC,IAFH,CAEQ,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACzB,UAAI,CAACD,QAAD,IAAaC,KAAjB,EAAwB;AACtB,eAAOJ,MAAM,CAAE,sBAAqBI,KAAM,EAA7B,CAAb;AACD;;AACDL,MAAAA,SAAS,CAACI,QAAD,CAAT;AACD,KAPH,EAQGE,KARH,CAQUC,GAAD,IAASN,MAAM,CAACM,GAAD,CARxB;AASD,GAVM,CAAP;AAWD,CAZM;AAcP,OAAO,MAAMC,OAAO,GAAIC,IAAD,IAAU;AAC/B,SAAO,IAAIV,OAAJ,CAAY,CAACC,SAAD,EAAYC,MAAZ,KAAuB;AACxCS,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,OAAjB;AACAhB,IAAAA,KAAK,CACFM,GADH,CACQ,aAAYO,IAAI,CAACG,OAAL,CAAaC,KAAM,EADvC,EAC2C;AACvCC,MAAAA,MAAM,EAAE;AACND,QAAAA,KAAK,EAAEJ,IAAI,CAACG,OAAL,CAAaC;AADd;AAD+B,KAD3C,EAMGV,IANH,CAMQ,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACzB,UAAI,CAACD,QAAD,IAAaC,KAAjB,EAAwB;AACtB,eAAOJ,MAAM,CAAE,sBAAqBI,KAAM,EAA7B,CAAb;AACD;;AACDL,MAAAA,SAAS,CAACI,QAAQ,CAACW,IAAV,CAAT;AACD,KAXH,EAYGT,KAZH,CAYUC,GAAD,IAASN,MAAM,CAACM,GAAD,CAZxB;AAaD,GAfM,CAAP;AAgBD,CAjBM,C,CAmBP;;AAEA,OAAO,MAAMS,OAAO,GAAIP,IAAD,IAAU;AAC/B,SAAO,IAAIV,OAAJ,CAAY,CAACC,SAAD,EAAYC,MAAZ,KAAuB;AACxCL,IAAAA,KAAK,CACFqB,IADH,CACQ,gBADR,EAC0BR,IAD1B,EAEGN,IAFH,CAEQ,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACzB,UAAI,CAACD,QAAD,IAAaC,KAAjB,EAAwB;AACtB,eAAOJ,MAAM,CAAE,sBAAqBI,KAAM,EAA7B,CAAb;AACD;;AACDL,MAAAA,SAAS,CAAE,mCAAF,CAAT;AACD,KAPH,EAQGM,KARH,CAQUC,GAAD,IAASN,MAAM,CAACM,GAAD,CARxB;AASD,GAVM,CAAP;AAWD,CAZM,C,CAcP;;AAEA,OAAO,MAAMW,cAAc,GAAG,MAAOC,KAAP,IAAiB;AAC7C,MAAIC,aAAa,GAAGvB,UAAU,CAAC,6GAAD,CAA9B;AACA,QAAMwB,MAAM,GAAG,MAAMD,aAArB;AACAxB,EAAAA,KAAK,CAACqB,IAAN,CAAW,6BAAX,EAA0CE,KAA1C,EACChB,IADD,CACOC,QAAQ,IAAI;AACjB,UAAMkB,SAAS,GAAGlB,QAAQ,CAACW,IAAT,CAAcQ,EAAhC;AACA,WAAOF,MAAM,CAACG,kBAAP,CAA0B;AAAEC,MAAAA,SAAS,EAAEH;AAAb,KAA1B,CAAP;AACD,GAJD;AAKD,CARM","sourcesContent":["import axios from \"axios\";\nimport {loadStripe} from '@stripe/stripe-js'\n\n// GET\nexport const getProducts = () => {\n  return new Promise((onSuccess, onFail) => {\n    axios\n      .get(\"/api/products\")\n      .then((response, error) => {\n        if (!response || error) {\n          return onFail(`Response failure : ${error}`);\n        }\n        onSuccess(response);\n      })\n      .catch((err) => onFail(err));\n  });\n};\n\nexport const getUser = (body) => {\n  return new Promise((onSuccess, onFail) => {\n    console.log(body.profile)\n    axios\n      .get(`/api/user/${body.profile.email}`,  {\n        params: {\n          email: body.profile.email\n        }\n      }) \n      .then((response, error) => {\n        if (!response || error) {\n          return onFail(`Response failure : ${error}`);\n        }\n        onSuccess(response.data);\n      })\n      .catch((err) => onFail(err));\n  });\n};\n\n// POST\n\nexport const addUser = (body) => {\n  return new Promise((onSuccess, onFail) => {\n    axios\n      .post(\"/api/users/add\", body)\n      .then((response, error) => {\n        if (!response || error) {\n          return onFail(`Response failure : ${error}`);\n        }\n        onSuccess(`user profile successfully created`);\n      })\n      .catch((err) => onFail(err));\n  });\n};\n\n// Stripe\n\nexport const processPayment = async (order) => {\n  var stripePromise = loadStripe(\"pk_test_51Ig7X1HoFREscj39cocpLby78kAIGaZCMSg87LseWP7JyeqvOQ19CG4oC7pYQbNm0uvRFQU811Rel104QQQZtJzn00wppsy5Kg\");\n  const stripe = await stripePromise;\n  axios.post('api/create-checkout-session', order)\n  .then (response => {\n    const sessionID = response.data.id\n    return stripe.redirectToCheckout({ sessionId: sessionID });\n  })\n}"]},"metadata":{},"sourceType":"module"}