{"ast":null,"code":"import { ADD_TO_CART, REMOVE_FROM_CART, SET_PAGE_INDEX, GET_PRODUCTS_PENDING, GET_PRODUCTS_SUCCESS, GET_PRODUCTS_FAILURE, UPDATE_CART, CHECKOUT, SET_DELIVERY_CHOICE } from './actionTypes';\nimport { getProducts } from '../../service';\nimport { data } from '../../../data/products';\n\nconst returnProductsArrays = items => {\n  let TwoDimensionalArray = [];\n  let remainder = items.length % 9;\n  let i = 0;\n\n  while (i < items.length - remainder) {\n    let array = items.slice(i, i + 9);\n    TwoDimensionalArray.push(array);\n    i += 9;\n  }\n\n  const array = items.slice(i);\n  TwoDimensionalArray.push(array);\n  return TwoDimensionalArray;\n};\n\nexport function getProductsPending() {\n  return {\n    type: GET_PRODUCTS_PENDING\n  };\n}\nexport function getProductsSuccess(data) {\n  return {\n    type: GET_PRODUCTS_SUCCESS,\n    payload: {\n      data\n    }\n  };\n}\nexport function getProductsFailure(error) {\n  return {\n    type: GET_PRODUCTS_FAILURE,\n    payload: {\n      error\n    }\n  };\n}\nexport function addToCart(product) {\n  return {\n    type: ADD_TO_CART,\n    payload: {\n      product\n    }\n  };\n}\nexport function updateCart(id, quantity) {\n  return {\n    type: UPDATE_CART,\n    payload: {\n      id,\n      quantity\n    }\n  };\n}\nexport function setDelivery(choice) {\n  return {\n    type: SET_DELIVERY_CHOICE,\n    payload: {\n      choice\n    }\n  };\n}\nexport function removeFromCart(id) {\n  return {\n    type: REMOVE_FROM_CART,\n    payload: {\n      id\n    }\n  };\n}\nexport function checkout() {\n  return {\n    type: CHECKOUT\n  };\n}\nexport function setPage(index) {\n  return {\n    type: SET_PAGE_INDEX,\n    payload: {\n      index\n    }\n  };\n} // Networking - MongoDB\n\nexport const fetchProducts = () => {\n  return async function (dispatch) {\n    dispatch(getProductsPending);\n    getProducts().then(response => returnProductsArrays).then(data => returnProductsArrays(data)).then(productsData => dispatch(getProductsSuccess(productsData))).catch(err => dispatch(getProductsFailure(err)));\n  };\n};","map":{"version":3,"sources":["/home/crochet/Bureau/Site E-commerce/client/src/lib/state/actions/index.js"],"names":["ADD_TO_CART","REMOVE_FROM_CART","SET_PAGE_INDEX","GET_PRODUCTS_PENDING","GET_PRODUCTS_SUCCESS","GET_PRODUCTS_FAILURE","UPDATE_CART","CHECKOUT","SET_DELIVERY_CHOICE","getProducts","data","returnProductsArrays","items","TwoDimensionalArray","remainder","length","i","array","slice","push","getProductsPending","type","getProductsSuccess","payload","getProductsFailure","error","addToCart","product","updateCart","id","quantity","setDelivery","choice","removeFromCart","checkout","setPage","index","fetchProducts","dispatch","then","response","productsData","catch","err"],"mappings":"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","sourcesContent":["import { \n  ADD_TO_CART, \n  REMOVE_FROM_CART,\n  SET_PAGE_INDEX,\n  GET_PRODUCTS_PENDING, \n  GET_PRODUCTS_SUCCESS, \n  GET_PRODUCTS_FAILURE,\n  UPDATE_CART,\n  CHECKOUT, \n  SET_DELIVERY_CHOICE\n} from './actionTypes'\nimport {getProducts} from '../../service'\nimport { data } from '../../../data/products'\n\n\n const returnProductsArrays = (items) => { \n  let TwoDimensionalArray = []\n  let remainder = items.length % 9\n  let i = 0\n  while (i < (items.length - remainder)) {\n    let array = items.slice(i, i + 9)\n    TwoDimensionalArray.push(array)\n    i += 9 \n  }\n  const array = items.slice(i)\n  TwoDimensionalArray.push(array)\n  return TwoDimensionalArray\n}\n\nexport function getProductsPending() { \n  return {\n    type: GET_PRODUCTS_PENDING\n  };\n}\nexport function getProductsSuccess(data) { \n  return {\n    type: GET_PRODUCTS_SUCCESS, \n     payload: { data }\n  };\n}\nexport function getProductsFailure(error) { \n return {\n    type: GET_PRODUCTS_FAILURE, \n     payload: { error }\n  };\n}\nexport function addToCart(product) {\n  return {\n    type: ADD_TO_CART,\n    payload: { product }\n  };\n}\nexport function updateCart(id, quantity) { \n  return {\n    type: UPDATE_CART,\n    payload: { id, quantity }\n  };\n}\nexport function setDelivery(choice) { \n  return {\n    type: SET_DELIVERY_CHOICE,\n    payload: { choice }\n  };\n}\nexport function removeFromCart(id) {\n  return {\n    type: REMOVE_FROM_CART,\n    payload: { id }\n  };\n}\nexport function checkout() { \n  return {\n    type: CHECKOUT\n  };\n}\nexport function setPage(index) {\n  return {\n    type: SET_PAGE_INDEX,\n    payload: { index }\n  };\n}\n\n// Networking - MongoDB\n\nexport const fetchProducts = () => {\n    return async function (dispatch) {\n      dispatch(getProductsPending);\n      getProducts().then((response) => returnProductsArrays)\n      .then(data => returnProductsArrays(data))\n      .then((productsData) => dispatch(getProductsSuccess(productsData)))\n      .catch(err => dispatch (getProductsFailure(err)));\n    };    \n};"]},"metadata":{},"sourceType":"module"}