{"ast":null,"code":"import * as Realm from \"realm-web\";\nimport { app } from '../../service/mongoDB-sdk';\n\nconst useAuthentication = dispatch => {\n  function handleUseRegistration(newUser) {\n    return new Promise(resolve => {\n      app.emailPasswordAuth.registerUser(newUser.email, newUser.password).then(() => {\n        const credentials = Realm.Credentials.emailPassword(newUser.email, newUser.password);\n        resolve();\n        app.logIn(credentials).then(user => console.log(user));\n      });\n    });\n  }\n\n  return {\n    handleUseRegistration\n  };\n};\n\nexport default useAuthentication;","map":{"version":3,"sources":["/home/crochet/Bureau/Site E-commerce/client/src/lib/hooks/useAuthentication/index.js"],"names":["Realm","app","useAuthentication","dispatch","handleUseRegistration","newUser","Promise","resolve","emailPasswordAuth","registerUser","email","password","then","credentials","Credentials","emailPassword","logIn","user","console","log"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,WAAvB;AACA,SAAQC,GAAR,QAAiB,2BAAjB;;AAEA,MAAMC,iBAAiB,GAAIC,QAAD,IAAc;AACpC,WAASC,qBAAT,CAA+BC,OAA/B,EAAwC;AACpC,WAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC5BN,MAAAA,GAAG,CAACO,iBAAJ,CACCC,YADD,CACcJ,OAAO,CAACK,KADtB,EAC6BL,OAAO,CAACM,QADrC,EAECC,IAFD,CAEM,MAAM;AACR,cAAMC,WAAW,GAAGb,KAAK,CAACc,WAAN,CAAkBC,aAAlB,CAChBV,OAAO,CAACK,KADQ,EAEhBL,OAAO,CAACM,QAFQ,CAApB;AAIAJ,QAAAA,OAAO;AACPN,QAAAA,GAAG,CAACe,KAAJ,CAAUH,WAAV,EAAuBD,IAAvB,CAA6BK,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAtC;AACH,OATD;AAUH,KAXM,CAAP;AAYH;;AACD,SAAO;AACHb,IAAAA;AADG,GAAP;AAGH,CAlBD;;AAmBA,eAAeF,iBAAf","sourcesContent":["import * as Realm from \"realm-web\";\nimport {app}from '../../service/mongoDB-sdk'\n\nconst useAuthentication = (dispatch) => {\n    function handleUseRegistration(newUser) {\n        return new Promise((resolve) => {\n            app.emailPasswordAuth\n            .registerUser(newUser.email, newUser.password)\n            .then(() => {\n                const credentials = Realm.Credentials.emailPassword(\n                    newUser.email,\n                    newUser.password\n                );\n                resolve();\n                app.logIn(credentials).then((user) => console.log(user));\n            });\n        });\n    }\n    return {\n        handleUseRegistration,\n    };\n};\nexport default useAuthentication"]},"metadata":{},"sourceType":"module"}