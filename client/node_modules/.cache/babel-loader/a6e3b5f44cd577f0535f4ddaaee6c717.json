{"ast":null,"code":"import axios from \"axios\"; // GET\n\nexport const getProducts = () => {\n  return new Promise((onSuccess, onFail) => {\n    axios.get(\"/api/products\").then((response, error) => {\n      if (!response || error) {\n        return onFail(`Response failure : ${error}`);\n      }\n\n      onSuccess(response);\n    }).catch(err => onFail(err));\n  });\n};\nexport const getUser = body => {\n  return new Promise((onSuccess, onFail) => {\n    console.log(body.profile); // realm return an object with user's profile details and email, we use the email to identify the user connected and retrieve profile details\n    // check the object in the console to see properties\n\n    axios.get(`/api/user/${body.profile.email}`, {\n      params: {\n        email: body.profile.email\n      }\n    }).then((response, error) => {\n      if (!response || error) {\n        return onFail(`Response failure : ${error}`);\n      }\n\n      onSuccess(response.data);\n    }).catch(err => onFail(err));\n  });\n}; // POST\n\nexport const addUser = body => {\n  return new Promise((onSuccess, onFail) => {\n    axios.post(\"/api/users/add\", body).then((response, error) => {\n      if (!response || error) {\n        return onFail(`Response failure : ${error}`);\n      }\n\n      onSuccess(`user profile successfully created`);\n    }).catch(err => onFail(err));\n  });\n};","map":{"version":3,"sources":["/home/crochet/Bureau/Site E-commerce/client/src/lib/service/index.js"],"names":["axios","getProducts","Promise","onSuccess","onFail","get","then","response","error","catch","err","getUser","body","console","log","profile","email","params","data","addUser","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,SAAO,IAAIC,OAAJ,CAAY,CAACC,SAAD,EAAYC,MAAZ,KAAuB;AACxCJ,IAAAA,KAAK,CACFK,GADH,CACO,eADP,EAEGC,IAFH,CAEQ,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACzB,UAAI,CAACD,QAAD,IAAaC,KAAjB,EAAwB;AACtB,eAAOJ,MAAM,CAAE,sBAAqBI,KAAM,EAA7B,CAAb;AACD;;AACDL,MAAAA,SAAS,CAACI,QAAD,CAAT;AACD,KAPH,EAQGE,KARH,CAQUC,GAAD,IAASN,MAAM,CAACM,GAAD,CARxB;AASD,GAVM,CAAP;AAWD,CAZM;AAcP,OAAO,MAAMC,OAAO,GAAIC,IAAD,IAAU;AAC/B,SAAO,IAAIV,OAAJ,CAAY,CAACC,SAAD,EAAYC,MAAZ,KAAuB;AACxCS,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,OAAjB,EADwC,CACd;AAC1B;;AACAf,IAAAA,KAAK,CACFK,GADH,CACQ,aAAYO,IAAI,CAACG,OAAL,CAAaC,KAAM,EADvC,EAC2C;AACvCC,MAAAA,MAAM,EAAE;AACND,QAAAA,KAAK,EAAEJ,IAAI,CAACG,OAAL,CAAaC;AADd;AAD+B,KAD3C,EAMGV,IANH,CAMQ,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACzB,UAAI,CAACD,QAAD,IAAaC,KAAjB,EAAwB;AACtB,eAAOJ,MAAM,CAAE,sBAAqBI,KAAM,EAA7B,CAAb;AACD;;AACDL,MAAAA,SAAS,CAACI,QAAQ,CAACW,IAAV,CAAT;AACD,KAXH,EAYGT,KAZH,CAYUC,GAAD,IAASN,MAAM,CAACM,GAAD,CAZxB;AAaD,GAhBM,CAAP;AAiBD,CAlBM,C,CAoBP;;AACA,OAAO,MAAMS,OAAO,GAAIP,IAAD,IAAU;AAC/B,SAAO,IAAIV,OAAJ,CAAY,CAACC,SAAD,EAAYC,MAAZ,KAAuB;AACxCJ,IAAAA,KAAK,CACFoB,IADH,CACQ,gBADR,EAC0BR,IAD1B,EAEGN,IAFH,CAEQ,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACzB,UAAI,CAACD,QAAD,IAAaC,KAAjB,EAAwB;AACtB,eAAOJ,MAAM,CAAE,sBAAqBI,KAAM,EAA7B,CAAb;AACD;;AACDL,MAAAA,SAAS,CAAE,mCAAF,CAAT;AACD,KAPH,EAQGM,KARH,CAQUC,GAAD,IAASN,MAAM,CAACM,GAAD,CARxB;AASD,GAVM,CAAP;AAWD,CAZM","sourcesContent":["import axios from \"axios\";\n\n// GET\nexport const getProducts = () => {\n  return new Promise((onSuccess, onFail) => {\n    axios\n      .get(\"/api/products\")\n      .then((response, error) => {\n        if (!response || error) {\n          return onFail(`Response failure : ${error}`);\n        }\n        onSuccess(response);\n      })\n      .catch((err) => onFail(err));\n  });\n};\n\nexport const getUser = (body) => {\n  return new Promise((onSuccess, onFail) => {\n    console.log(body.profile) // realm return an object with user's profile details and email, we use the email to identify the user connected and retrieve profile details\n    // check the object in the console to see properties\n    axios\n      .get(`/api/user/${body.profile.email}`,  {\n        params: {\n          email: body.profile.email\n        }\n      }) \n      .then((response, error) => {\n        if (!response || error) {\n          return onFail(`Response failure : ${error}`);\n        }\n        onSuccess(response.data);\n      })\n      .catch((err) => onFail(err));\n  });\n};\n\n// POST\nexport const addUser = (body) => {\n  return new Promise((onSuccess, onFail) => {\n    axios\n      .post(\"/api/users/add\", body)\n      .then((response, error) => {\n        if (!response || error) {\n          return onFail(`Response failure : ${error}`);\n        }\n        onSuccess(`user profile successfully created`);\n      })\n      .catch((err) => onFail(err));\n  });\n};\n"]},"metadata":{},"sourceType":"module"}